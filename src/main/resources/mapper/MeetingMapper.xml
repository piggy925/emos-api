<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mumu.emos.api.db.dao.MeetingMapper">
    <resultMap id="BaseResultMap" type="com.mumu.emos.api.db.pojo.Meeting">
        <!--@mbg.generated-->
        <!--@Table tb_meeting-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="creator_id" jdbcType="BIGINT" property="creatorId"/>
        <result column="date" jdbcType="DATE" property="date"/>
        <result column="place" jdbcType="VARCHAR" property="place"/>
        <result column="start" jdbcType="TIME" property="start"/>
        <result column="end" jdbcType="TIME" property="end"/>
        <result column="type" jdbcType="SMALLINT" property="type"/>
        <result column="members" jdbcType="VARCHAR" property="members"/>
        <result column="desc" jdbcType="VARCHAR" property="desc"/>
        <result column="instance_id" jdbcType="VARCHAR" property="instanceId"/>
        <result column="present" jdbcType="VARCHAR" property="present"/>
        <result column="unpresent" jdbcType="VARCHAR" property="unpresent"/>
        <result column="status" jdbcType="SMALLINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, uuid, title, creator_id, `date`, place, `start`, `end`, `type`, members, `desc`,
        instance_id, present, unpresent, `status`, create_time
    </sql>

    <select id="searchOfflineMeetingByPage" parameterType="hashmap" resultType="hashmap">
        SELECT mr.name, temp.meeting
        FROM tb_meeting_room mr
        LEFT JOIN
        (SELECT place,
        CONCAT('[', GROUP_CONCAT(JSON_OBJECT('start', DATE_FORMAT(start, '%H:%i'),
        'end', DATE_FORMAT(end, '%H:%i'),
        'status', status,
        'time', ROUND(TIMESTAMPDIFF(MINUTE,
        CONCAT(date, ' ', start),
        CONCAT(date, ' ', end)) /
        30))), ']') AS meeting
        FROM tb_meeting
        WHERE type = 2
        AND status != 2
        AND date = #{date}
        <if test="mold == '我的会议'">
            AND JSON_CONTAINS(members, CAST(#{userId} AS CHAR))
        </if>
        GROUP BY place) temp
        ON mr.name = temp.place
        WHERE mr.status = 1
        LIMIT #{start}, #{length}
    </select>

    <select id="searchOfflineMeetingCount" resultType="long">
        SELECT COUNT(*)
        FROM tb_meeting_room
        WHERE status = 1
    </select>

    <update id="updateMeetingInstanceId" parameterType="hashmap">
        UPDATE tb_meeting
        SET instance_id = #{instanceId}
        WHERE uuid = #{uuid}
    </update>

    <select id="searchMeetingMembersInSameDept" parameterType="string" resultType="boolean">
        SELECT IF(COUNT(DISTINCT u.dept_id) = 1, 'true', 'false')
        FROM tb_meeting m
                JOIN tb_user u ON JSON_CONTAINS(m.members, CAST(u.id AS char))
        WHERE m.uuid = #{uuid}
    </select>

    <insert id="insert" parameterType="com.mumu.emos.api.db.pojo.Meeting">
        INSERT INTO tb_meeting
        SET title = #{title},
        <if test="uuid != null">
            uuid = #{uuid},
        </if>
        `date` = #{date},
        creator_id = #{creatorId},
        <if test="place != null">
            place = #{place},
        </if>
        `start` = #{start},
        `end` = #{end},
        `type` = #{type},
        members = #{members},
        `desc` = #{desc},
        instance_id = #{instanceId},
        status = #{status},
        create_time = NOW()
    </insert>

    <select id="searchOfflineMeetingInWeeks" resultType="java.util.HashMap" parameterType="hashmap">
        SELECT id,
        title,
        DATE_FORMAT(date, '%m/%d') AS date,
        DATE_FORMAT(start, '%H:%i') AS start,
        ROUND(TIMESTAMPDIFF(MINUTE,
        CONCAT(date, ' ', start),
        CONCAT(date, ' ', end)) / 30) AS time,
        uuid,
        instance_id AS instanceId,
        IF(creator_id = #{userId}, 'true', 'false') AS isCreator,
        status
        FROM tb_meeting
        WHERE type = 2
        AND place = #{place}
        AND status != 2
        AND date BETWEEN #{start} AND #{end}
        <if test="mold == '我的会议'">
            AND JSON_CONTAINS(members, CAST(#{userId} AS CHAR))
        </if>
    </select>

    <select id="searchMeetingInfo" resultType="java.util.HashMap" parameterType="long">
        SELECT m.title,
               m.date,
               m.place,
               DATE_FORMAT(start, '%H:%i')                                                                 AS start,
               DATE_FORMAT(end, '%H:%i')                                                                   AS end,
               m.status,
               CONCAT('[', GROUP_CONCAT(JSON_OBJECT("name", u.name, "photo", u.photo) SEPARATOR ','), ']') AS members
        FROM tb_meeting m
                LEFT JOIN tb_user u ON JSON_CONTAINS(m.members, CAST(u.id AS char))
        WHERE m.id = #{id}
          AND u.status = 1
    </select>

    <select id="searchCurrentMeetingInfo" resultType="java.util.HashMap" parameterType="long">
        SELECT m.title,
        m.date,
        m.place,
        DATE_FORMAT(start, '%H:%i') AS start,
        DATE_FORMAT(end, '%H:%i') AS end,
        m.status,
        (SELECT CONCAT('[', GROUP_CONCAT(JSON_OBJECT("name", u.name, "photo", u.photo) SEPARATOR '，'), ']')
        FROM tb_user u
        WHERE JSON_CONTAINS(m.present, CAST(u.id AS char))) AS present,
        (SELECT CONCAT('[', GROUP_CONCAT(JSON_OBJECT("name", u.name, "photo", u.photo) SEPARATOR '，'), ']')
        FROM tb_user u
        WHERE JSON_CONTAINS(m.unpresent, CAST(u.id AS char))) AS unpresent
        FROM tb_meeting m
        WHERE m.id = #{id}
    </select>

    <delete id="deleteMeetingApplication" parameterType="hashmap">
        DELETE
        FROM tb_meeting
        WHERE id = #{id}
          AND creator_id = #{creatorId}
    </delete>

    <select id="searchMeetingById" parameterType="hashmap" resultType="HashMap">
        SELECT m.uuid,
               m.creator_id                                AS creatorId,
               IF(creator_id = #{userId}, 'true', 'false') AS isCreator,
               m.title,
               u.name,
               DATE_FORMAT(m.date, '%Y-%m-%d')             AS date,
               m.place,
               DATE_FORMAT(m.start, '%H:%i')               AS `start`,
               DATE_FORMAT(m.end, '%H:%i')                 AS `end`,
               m.type,
               m.status,
               m.desc,
               m.instance_id                               AS instanceId
        FROM tb_meeting m
                JOIN tb_user u ON m.creator_id = u.id
        WHERE m.id = #{id}
          AND u.status = 1
    </select>


    <select id="searchOnlineMeetingByPage" parameterType="HashMap" resultType="HashMap">
        SELECT m.id,
        m.title,
        u.`name` AS creatorName,
        IF(creator_id = #{userId}, 'true', 'false') AS isCreator,
        IF(JSON_CONTAINS(m.members, CAST(#{userId} AS char)) = 1, 'true', 'false') AS mine,
        m.date,
        DATE_FORMAT(m.`start`, '%H:%i') AS `start`,
        DATE_FORMAT(m.`end`, '%H:%i') AS `end`,
        JSON_LENGTH(m.members) AS num,
        m.`status`,
        m.`desc`,
        m.uuid,
        m.instance_id AS instanceId
        FROM tb_meeting m
        JOIN tb_user u ON m.creator_id = u.id
        WHERE m.type = 1
        AND m.`status` != 2
        <if test="date != null">
            AND m.date = #{date}
        </if>
        <if test="mold == '我的会议'">
            AND JSON_CONTAINS(m.members, CAST(#{userId} AS char))
        </if>
        ORDER BY m.id DESC
        LIMIT #{start}, #{length}
    </select>

    <select id="searchOnlineMeetingCount" parameterType="HashMap" resultType="long">
        SELECT COUNT(*)
        FROM tb_meeting
        WHERE type = 1
        AND `status` != 2
        <if test="date != null">
            AND date = #{date}
        </if>
        <if test="mold == '我的会议'">
            AND JSON_CONTAINS(members, CAST(#{userId} AS char))
        </if>
    </select>

    <select id="searchOnlineMeetingMembers" parameterType="hashmap" resultType="hashmap">
        SELECT u.id, u.name, u.photo, IF(u.id = #{userId}, 1, 0) AS mine
        FROM tb_meeting m
        LEFT JOIN tb_user u
        ON JSON_CONTAINS(m.members, CAST(u.id AS char))
        WHERE u.status = '1'
        AND m.id = #{meetingId}
        ORDER BY mine DESC
    </select>

    <select id="searchCanCheckinMeeting" resultType="long" parameterType="hashmap">
        SELECT COUNT(*)
        FROM tb_meeting
        WHERE id = #{meetingId}
        AND status IN (3, 4)
        AND NOW() BETWEEN DATE_SUB(CONCAT(date, ' ', start), INTERVAL 15 MINUTE) AND DATE_SUB(CONCAT(date, ' ', end),
        INTERVAL
        15 MINUTE)
        AND JSON_CONTAINS(IFNULL(members, JSON_ARRAY()), CAST(#{userId} AS char))
        AND NOT JSON_CONTAINS(IFNULL(present, JSON_ARRAY()), CAST(#{userId} AS char));
    </select>

    <update id="updateMeetingPresent" parameterType="hashmap">
        UPDATE tb_meeting
        SET present = JSON_ARRAY_APPEND(IFNULL(present, JSON_ARRAY()), '$', #{userId})
        WHERE id = #{meetingId}
        AND NOW() BETWEEN DATE_SUB(CONCAT(date, ' ', start), INTERVAL 15 MINUTE) AND DATE_SUB(CONCAT(date, ' ', end),
        INTERVAL
        15 MINUTE)
        AND JSON_CONTAINS(IFNULL(members, JSON_ARRAY()), CAST(#{userId} AS char))
        AND NOT JSON_CONTAINS(IFNULL(present, JSON_ARRAY()), CAST(#{userId} AS char));
    </update>
</mapper>