<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mumu.emos.api.db.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="com.mumu.emos.api.db.pojo.Role">
    <!--@mbg.generated-->
        <!--@Table tb_role-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="permissions" jdbcType="VARCHAR" property="permissions"/>
        <result column="desc" jdbcType="VARCHAR" property="desc"/>
        <result column="default_permissions" jdbcType="VARCHAR" property="defaultPermissions"/>
        <result column="systemic" jdbcType="BOOLEAN" property="systemic"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, role_name, permissions, `desc`, default_permissions, systemic
    </sql>

    <select id="searchAllRole" resultType="HashMap">
        SELECT id,
               role_name AS roleName
        FROM tb_role
        ORDER BY id
    </select>

    <select id="searchRoleByPage" resultType="java.util.HashMap">
        SELECT r.id,
        r.role_name AS roleName,
        JSON_LENGTH(r.permissions) AS permissions,
        COUNT(u.id) AS users,
        r.`desc`,
        r.systemic
        FROM tb_role r
        LEFT JOIN tb_user u
        ON JSON_CONTAINS(u.role, CONVERT(r.id, char))
        WHERE 1 = 1
        <if test="roleName != null">
            AND role_name LIKE '%${roleName}%'
        </if>
        GROUP BY r.id
        LIMIT #{start}, #{length}
    </select>

    <select id="searchRoleCount" parameterType="HashMap" resultType="long">
        SELECT COUNT(*) FROM (
        SELECT r.id
        FROM tb_role r
        LEFT JOIN tb_user u ON JSON_CONTAINS(u.role, CONVERT(r.id, char))
        WHERE 1 = 1
        <if test="roleName != null">
            AND r.role_name LIKE '%${roleName}%'
        </if>
        GROUP BY r.id
        ) AS temp
    </select>

    <insert id="insert" parameterType="com.mumu.emos.api.db.pojo.Role">
        INSERT INTO tb_role
        SET role_name = #{roleName},
        permissions = #{permissions}
        <if test="desc != null">
            ,
            `desc` = #{desc}
        </if>
    </insert>

    <select id="searchUserIdByRoleId" parameterType="int" resultType="int">
        SELECT u.id
        FROM tb_role r
        JOIN tb_user u ON JSON_CONTAINS(u.role, CONVERT(r.id, char))
        WHERE r.id = #{id}
    </select>
    <update id="update" parameterType="com.mumu.emos.api.db.pojo.Role">
        UPDATE tb_role
        SET role_name=#{roleName},
        `desc`=#{desc},
        permissions=#{permissions}
        WHERE id = #{id}
        AND id != 0
    </update>

    <select id="searchById" parameterType="int" resultType="HashMap">
        SELECT id,
        role_name AS roleName,
        permissions,
        `desc`,
        default_permissions AS defaultPermissions
        FROM tb_role
        WHERE id = #{id}
    </select>

    <select id="searchCanDelete" resultType="boolean">
        SELECT IF(SUM(temp.users) > 0, FALSE, TRUE)
        FROM (SELECT COUNT(u.id) AS users
        FROM tb_role r
        LEFT JOIN tb_user u ON JSON_CONTAINS(u.role, CONVERT(r.id, char))
        WHERE r.id IN
        <foreach collection="array" open="(" close=")" separator="," item="one">
            #{one}
        </foreach>
        GROUP BY r.id)
        AS temp
    </select>

    <delete id="deleteRoleByIds">
        DELETE
        FROM tb_role
        WHERE id IN
        <foreach collection="array" open="(" close=")" separator="," item="one">
            #{one}
        </foreach>
    </delete>
</mapper>